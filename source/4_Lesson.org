#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:nil creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Web Design
#+AUTHOR: Xiaohui Ellis

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/7-CS-webDesign">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="6_Lesson.html">Week6</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Contain your Excitement
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Let's check our design sketch to see what we should do next. Click the green button again to hide the sketch and read on.
- Since we have two boxes split the space below the =topbox=, it makes sense to make a big box to hold both those two boxes. Also, it will make it easier for us to adjust the relative positions of those two boxes if we put them inside one big container. 
- In fact, we will call this big box =container=. 
- This container will be big enough to hold the two boxes, but it will have the same width as the =topbox= based on our design.
[[./img/sketch2.png]]
** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- You should now know how and where to add the lines of code to create a box. Add this to your =index.html= page in the right place.
#+begin_src html
<div id="container"> 
</div> 
#+end_src

- You should now also know how and where to add style attributes to a box.
- If you can't remember, look over the last lesson's notes.

#+begin_src html
#container { 
width: 800px; 
height: 800px; 
}
#+end_src

- Let's examine what we have in our =index.html= file. Try to indent your lines of code to help you identify pairs of starting and closing tags and the structure of your box layout.
[[./img/container-1.png]]
- Save your =index.html= file and open it with a browser or refresh your browser if you have it open already to see the effects.
** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- Let's check our design sketch again to see where the left box should go.
[[./img/sketch.png]]
- We have created a container to hold the two side-by-side boxes. The container has a height of 800px and width of 800px. The two boxes inside it have the same height as the container but with different width. We will give the left box a width of 160px and the right box a wdith of 640px to start with. 
- 160px + 640px = 800px which means those two boxes take up all the width of the container.
- Since the two boxes are nested inside the container, we need to put the left box definition nested inside the container box.
#+begin_src html
<div id="container"> 
    <div id="leftbox"> 
    </div> 
</div> 
#+end_src
- Now let's add style attributes to the left box. You know how to define a box's height, width and background colour. To put the box in the left side of the container, we need a new attribute float with value left.
#+begin_src html
#leftbox { 
width: 160px; 
height: 800px; 
float: left; 
}
#+end_src
- Save your =index.html= file and open it with a browser or refresh your browser if you have it open already to see the effects.
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- *Task:* Create the layout using the box model by adding the right box inside the container independently.
- We should now have a topbox, a container box and a left box that is in the container's left side.
- You will need to create the right box with a height of *800px*, width of *640px*, background colour of your choice.
- The right box must stay to the right side of the container box.
- If you are stuck, scroll back up to see how the left box is defined and styled.
** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- We have now three boxes. All of them are empty except the top box which has our page heading. Let's examine the body section of our =index.html=.
[[./img/html-body-1.png]]
- As we learned before, the order of elements in a html file is very much the same order elements will show up in a browser. The paragraph My dog Jack is a minature schnauzer. He is 8 months old. will show up as the first line in this case
- If I want the paragraph appear in the right box, I need to move the line inside the definition of the rightbox.
- It's the same for the hyperlink. I need to move it to the inside of the left box.
- This is the body section of the =index.html= file after the moving:
[[./img/html-body-2.png]]
- Save your =index.html= file and open it with a browser or refresh your browser if you have it open already to see the effects.
** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:
- After you have done everything so far, you should see something similar to the following image when you open your =index.html= in a browser:
[[./img/page-5.png]]
** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- Complete the tasks for this lesson. Upload your =index.html= file.
- *Silver:* Create the =container= correctly.
- *Gold:* Add the left and right box.
- *Platinum:* Complete all the tasks for this lesson.
